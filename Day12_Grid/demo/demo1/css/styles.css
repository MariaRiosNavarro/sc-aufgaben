* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
}

body {
  padding: 20px;
}
div {
  text-align: center;
  padding: 10px;
  border-radius: 10px;
}

/* ---------- grid-tamplate-columns/rpws ---------- */

.parent-container-one {
  display: grid;

  /* ! fr -> fractional unit */
  /* ? dient dazu, den verfügbaren Platz innerhalb einer Spalte oder Zeile im Raster aufzuteilen */
  grid-template-columns: 1fr 1fr 2fr;
  /* ? wir legen die Breite der Spalten im Raster fest -> wir können alle Units verwenden! */
  /* grid-template-columns: repeat(3, 1fr); */ /* * shortcut -> nur bei gleichen Werten! */
  /* grid-template-columns: 100px 50% 10vw; */
  grid-template-rows: 100px 50px;
  /* ! template-rows/template-columns -> wir haben eine präzise Kontrolle über die Größen der Spalten und Zeilen */

  gap: 10px;

  /* justify-items: center; */ /* !* Elemente werden horizontal in der Mitte der Zelle ausgerichtet. */
  /* justify-items: start; */ /* !* Elemente werden horizontal in der Mitte der Zelle ausgerichtet. */
  /* justify-items: end; */ /* !* Elemente werden horizontal in der Mitte der Zelle ausgerichtet. */
  /* justify-items: stretch; */ /* !default */

  /* align-items:center; */
  /* align-items:end; */ /* *  Elemente werden am Ende der Zelle ausgerichtet. */
  /* align-items:start; */ /* * *  Elemente werden am oberen rand der Zelle ausgerichtet. */
}

/* ! justify-self / align-self -> wirkt sich direkt auf das einzelne Element aus */
.parent-container-one div:nth-of-type(1) {
  background-color: rgb(255, 0, 140);
  /* justify-self: end; */
  /* align-self: center; */
}
.parent-container-one div:nth-of-type(2) {
  background-color: rgb(234, 255, 0);

  /* * wir können auch flex verwnden */
  display: flex;
  flex-direction: row;
  align-items: center;
}
.parent-container-one div:nth-of-type(3) {
  background-color: rgb(17, 0, 255);
  /* justify-self: start; */
}

.parent-container-one div:nth-of-type(4) {
  background-color: rgb(0, 255, 21);
}

/* ---------- grid-tamplate-areas---------- */

.parent-container-two {
  display: grid;
  grid-template-columns: 50px 150px 50% auto; /* * Auto passt sich dem Inhalt an */
  grid-template-areas: 
  /* * wir könne das Rasterlayout in einem visuellen Raster von benannten Bereichen organisieren. */
  /* ? wir bauen ein tamplate -> die namen sind willkürlich */
    "header header header pizza "
    /* "main main aside" */
    "saft saft kuchen kuchen "
    "footer footer footer footer";
  gap: 15px;
}

.parent-container-two div:nth-of-type(1) {
  background-color: rgb(173, 222, 230);
  grid-area: header; /* * muss den gleichen namen haben wie in den grid-template-areas */
}
.parent-container-two div:nth-of-type(2) {
  background-color: rgb(173, 230, 191);
  grid-area: pizza;
}
.parent-container-two div:nth-of-type(3) {
  background-color: rgb(230, 173, 173);
  grid-area: saft;
}
.parent-container-two div:nth-of-type(4) {
  background-color: rgb(199, 173, 230);
  grid-area: kuchen;
}
.parent-container-two div:nth-of-type(5) {
  background-color: rgb(230, 173, 221);
  grid-area: footer;
}

/* ---------- CHILD CONTAINER / grid-row & grid-column ---------- */

.parent-container-three {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 1fr 1fr 1fr 1fr;
  gap: 10px;
}

.grid-item {
  background-color: aqua;
  text-align: center;
}

.grid-item:nth-child(1) {
  grid-column: 1 / 2; /* ? beginnt ab Spalte 1 und endet vor Spalte 2 */
  grid-row: 1 / 3;
}

.grid-item:nth-child(2) {
  grid-column: 2 / 4; /* ? rutsscht in neue Spalte, beegint und endet bei Spalte 1 */
  background-color: rgb(255, 140, 0);
  /* grid-row: 2 / 3; */
}

.grid-item:nth-child(3) {
  background-color: rgb(228, 255, 55);

  /* ? kann nur noch in der row geschoben werden/*/
  grid-column: 4 / 5;
  grid-row: 1 / 4;
}
.grid-item:nth-child(4) {
  background-color: pink;
  grid-column: 2/3; /* ? Erstreckt sich über alle 3 Spalten */
  grid-row: 2 / 4;
}
.grid-item:nth-child(5) {
  background-color: rgb(255, 60, 92);
  grid-column: 3/4; /* ? Erstreckt sich über alle 3 Spalten */
  grid-row: 2 / 4;
}
